on:
  push:
    branches:
      - main

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: mgmt590-assignment3-flask
  REGION: us-central1
  CLOUD_SQL_CONNECTION_NAME: assignment-3-315306:us-central1:cloud-sql-postgres


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
        
    - name: Checkout
      uses: actions/checkout@v2
      
    # Setup gcloud CLI
      
    - uses: mattes/gce-cloudsql-proxy-action@v1
      with:
        creds: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        instance: assignment-3-315306:us-central1:cloud-sql-postgres

    - name: Setup Cloud SDK
      env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          SERVICE: mgmt590-assignment3-flask
          REGION: us-central1

      uses: google-github-actions/setup-gcloud@master
      with:

      
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action

    - name: Authorize Docker push
      env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          SERVICE: mgmt590-assignment3-flask
          REGION: us-central1

      run: gcloud auth configure-docker

    - name: Build and Push Container
      env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          SERVICE: mgmt590-assignment3-flask
          REGION: us-central1

      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        
        
    - name: Deploy to Cloud Run
      env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          SERVICE: mgmt590-assignment3-flask
          REGION: us-central1

      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
        


    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
